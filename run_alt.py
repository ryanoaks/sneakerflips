import json
import discord
import unittest.mock

from footlocker_alt import *
from stockx_alt import *
from match import *
from webhook import *

def get_pages(url):
    r = requests.get(url)
    res = json.loads(r.text)
    response = res['pagination']['totalPages']
    return response

get_pages('https://www.champssports.com/apigate/products/search?query=:relevance:styleDiscountPercent:SALE&currentPage=0&pageSize=1')


url = 'https://www.champssports.com/apigate/products/search?query=:relevance:styleDiscountPercent:SALE&currentPage=0&pageSize=1'
def run(url, discount):
    urls = url
    headers = {
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36',
    }
    pages=get_pages(url)
    #search each page
    for n in range(0, pages+1):
        new_url=urls.format(n)
        search_products(new_url, headers)
    print("Finished Product Search")
    sneaker_list = get_product_list()

    #search stockx for each product
    for product in sneaker_list:
        brand = product['brand']
        name = product['name']
        sku = product['sku']
        search_param = product['search_param']

        try:
            request_url = stockx_format_request(search_param)
            raw_request_data = browser_request(request_url)
            stockx_shoe = stockx_parse_json(raw_request_data)
            match(stockx_shoe, product)
        except:
            pass
    
    
    stockx_list = get_stockx_list()
    print("Received Stockx List")

    matches = get_match_list()
    
    profit_list = find_profit(matches, .5)

    print(sneaker_list)
    print("\n")
    print(stockx_list)
    print('\n')
    print(matches)

    for i in profit_list:
        send_webhook(i)
             



run(url,.2)




















































































































































































































































































































































































































































































































